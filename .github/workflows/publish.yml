name: Publish QPM Package

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        submodules: true
        lfs: true
    
    - uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Create ndkpath.txt
      run: |
        echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
        cat ${GITHUB_WORKSPACE}/ndkpath.txt
        
    - name: Get QPM
      if: steps.cache-qpm.outputs.cache-hit != 'true'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: cargo-build.yml
        name: linux-qpm-rust
        path: QPM
        repo: RedBrumbler/QuestPackageManager-Rust

    - name: QPM Collapse
      run: |
        chmod +x ./QPM/qpm-rust
        ./QPM/qpm-rust collapse

    - name: QPM Dependencies Cache
      id: cache-qpm-deps
      uses: actions/cache@v2
      env:
        cache-name: cache-qpm-deps
      with:
        path: /home/runner/.local/share/QPM-Rust/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('qpm.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: QPM Restore
      run: |
        ./QPM/qpm-rust restore
        
    - name: Get Tag Version
      id: get_tag_version
      run: |
        echo ${GITHUB_REF#refs/tags/}
        echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
        echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
      
    - name: QPM Edit Version
      run: |
        ./QPM/qpm-rust package edit version "${{ steps.get_tag_version.outputs.VERSION }}"
        
    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}
        pwsh -Command ./build.ps1
        
    - name: Configure commit
      run: |
        git config user.name "Github Actions"
        git config user.email "<>"

    - name: Commit Edit Version
      run: |
        git add ./qpm.json
        git commit -m "Update Version and post restore"

    - name: Get Commit ID
      id: get_commit_id
      run: |
        echo `git rev-parse HEAD`
        echo ::set-output name=ID::`git rev-parse HEAD`

    - name: Force create tag
      run: |
        git tag --force ${{ steps.get_tag_version.outputs.TAG }} ${{ steps.get_commid_id.outputs.ID }}

    - name: Create and push version specific branch
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git branch version-${{ steps.get_tag_version.outputs.TAG }}
        git push -u origin version-${{ steps.get_tag_version.outputs.TAG }} --force --tags

    - name: Change QPM Package Info
      run: |
        ./QPM/qpm-rust package edit-extra --branchName "version-${{ steps.get_tag_version.outputs.TAG }}"

    - name: Commit Changed package info
      run: |
        git add qpm.json
        git commit -m "Updated qpm.json"
      
    - name: Get Commit ID
      id: get_created_commit_id
      run: |
        echo `git rev-parse HEAD`
        echo ::set-output name=ID::`git rev-parse HEAD`
      
    - name: Push New Commit and Tag
      run: |
        git push origin HEAD:version-${{ steps.get_tag_version.outputs.TAG }} --force
        git tag --force ${{ steps.get_tag_version.outputs.TAG }} ${{ steps.get_created_commit_id.outputs.ID }}
        git push --tags --force
        
    - name: QPM Publish
      run: ./QPM/qpm-rust publish "${{ secrets.QPM_KEY }}"